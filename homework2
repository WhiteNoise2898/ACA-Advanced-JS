//1. 
const options = ["Rock", "Paper", "Scissors"];
const getRandomOption = () => options[Math.floor(Math.random() * options.length)];

const rps = (p1 = getRandomOption(), p2 = getRandomOption()) => {
    if (p1 === p2) return "It's a draw";
    if (
        (p1 === "Rock" && p2 === "Scissors") ||
        (p1 === "Scissors" && p2 === "Paper") ||
        (p1 === "Paper" && p2 === "Rock")
    ) return "The winner is p1";
    return "The winner is p2";
};

console.log(rps("Rock", "Paper")); 


// well this one is pretty long and there is no need in const options but i wanted to try

//the other option 
function rps(p1, p2) {
    if (p1 === p2) {
        return "It's a draw";
    } else if (
        (p1 === "Rock" && p2 === "Scissors") ||
        (p1 === "Scissors" && p2 === "Paper") ||
        (p1 === "Paper" && p2 === "Rock")
    ) {
        return "The winner is p1";
    } else {
        return "The winner is p2";
    }
}



//2. calculator



function calculator(a, b, operator) {
function validateNumber(n) {
    n = Number(n); 
    if (isNaN(n)) { 
        return 'This is not a number';
    }
    return n; 
}
    a = validateNumber(a);
    b = validateNumber(b);

    if (typeof a === 'string') return a; 
    if (typeof b === 'string') return b; 

    switch (operator) {
        case '+':
            return a + b;
        case '-':
            return a - b;
        case '*':
            return a * b;
        case '/':
            if (b === 0) {
                return "Cannot divide by zero";
            }
            return a / b;
        default:
            return "Invalid operator";
    }
};

3. temperature

function convertTemperature(value, scale) {
switch (scale.toLowerCase()) {
    case "c":
        return (value * 9/5) + 32;
    case "f":
        return (value - 32) * 5/9;
    default: return "Invalid scale";
}
}
console.log(convertTemperature(32, "c"));


4.age verification 

function isAdult(age) {
    function validateNumber(n) {
        n = Number(n);
        if (isNaN(n) || typeof n !== 'number') {
            return 'Invalid input: Age must be a number.';
        }
        return n;
    }

    age = validateNumber(age);
    
    if (typeof age === 'number') {
        if (age >= 18) {
            return true;
        } else {
            return false;
        }
    } else {
        return age;
    }
}

console.log(isAdult("adc"));


5.BMI Calculator 

function calculateBMI(weight, height){
 function validateNumber(n) {
        n = Number(n);
        if (isNaN(n) || typeof n !== 'number') {
            return 'Invalid input: Age must be a number.';
        }
        return n;
    }
weight = validateNumber(weight);
height = validateNumber(height);


 if (typeof weight === 'number' && typeof height === 'number') {
       return (weight/height/height) * 10.000;
    } else {
        switch 
    }

}

